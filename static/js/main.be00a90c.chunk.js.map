{"version":3,"sources":["ChartData.js","ChartGraph.js","Notifications.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","height","overflow","opacity","props","isDragging","zIndex","subHeader","backgroundColor","cursor","addNewDataChart","float","chip","dropDown","width","chartDataStyle","top","left","position","ChartData","chartDataRef","useRef","index","dataSet","dataId","changeDataId","positions","widgetSourceId","setWidgetPositions","initialPosition","addWidgetDataSource","getNextInitialPos","dataSets","changeDataSource","useDrag","item","type","collect","monitor","drag","initial","useEffect","widget","current","clientHeight","clientWidth","styles","ref","style","List","classes","component","subheader","Chip","label","size","Select","value","onChange","event","target","map","i","MenuItem","key","name","IconButton","onClick","ChartList","selectedindex","onClickItem","ListItem","button","selected","ListItemText","primary","ChartGraph","chartGraphRef","dataIds","graphSourceId","addGraphWidget","widgetDataSources","changeGraphSource","widgetSource","stockData","chartGraph","document","getElementsByClassName","chartDiv","createElement","chartElement","appendChild","chart","createChart","areaSeries","addAreaSeries","topColor","bottomColor","lineColor","lineStyle","lineWidth","crosshairMarkerVisible","crosshairMarkerRadius","applyOptions","localization","dateFormat","priceScale","timeScale","fixLeftEdge","lockVisibleTimeRangeOnResize","watermark","text","layout","setData","data","time","date","removeChild","border","getChartStyle","className","sourceId","sourceIndex","widgetSourceLabel","theme","maxWidth","palette","background","paper","inline","display","Notifications","notifRef","items","closeItem","notifications","ListSubheader","NotifItem","dismissItem","length","ListItemAvatar","Avatar","alt","src","secondary","Fragment","stockSet","dataJson","result","forEach","findIndex","push","arrangeData","App","useState","setWidgetDataSources","setDataIds","graphWidgets","setGraphWidgets","newSources","Object","assign","newDataIds","newGraphWidgets","setNotifications","useDrop","accept","drop","elementType","undefined","newWidgetPos","difference","widgetPositions","widgetPos","currentWidget","y","x","fixedWidget","widgetTop","widgetLeft","widgetHeight","widgetWidth","fixOverlap","calculateNewPosition","getDifferenceFromInitialOffset","chartData0","chartGraph0","keys","lastWidget","currentWidgetWidth","window","innerWidth","maxHeight","pos","getMaxElHeight","dataSourceIndex","newWidgetSources","notifs","splice","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","DndProvider","backend","Backend","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be00a90c.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDrag } from 'react-dnd';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\troot: {\r\n\t\theight: '400px',\r\n\t\toverflow: 'scroll',\r\n\t\topacity: (props) => (props.isDragging ? 0.5 : 1),\r\n\t\tzIndex: 1\r\n\t},\r\n\tsubHeader: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tcursor: 'move'\r\n\t},\r\n\taddNewDataChart: {\r\n\t\tfloat: 'right'\r\n\t},\r\n\tchip: {\r\n\t\tcursor: 'move'\r\n\t},\r\n\tdropDown: {\r\n\t\twidth: '50%'\r\n\t}\r\n}));\r\nconst chartDataStyle = (top, left) => ({\r\n\twidth: '16%',\r\n\theight: 'fit-content',\r\n\ttop,\r\n\tleft,\r\n\tposition: 'absolute'\r\n});\r\nexport default function ChartData(props) {\r\n\tconst chartDataRef = useRef();\r\n\tconst { index, dataSet, dataId, changeDataId, positions, widgetSourceId, setWidgetPositions, initialPosition, addWidgetDataSource, getNextInitialPos, dataSets, changeDataSource } = props;\r\n\tconst [, drag ] = useDrag({\r\n\t\titem: {\r\n\t\t\ttype: 'chartData',\r\n\t\t\tindex\r\n\t\t},\r\n\t\tcollect: (monitor) => {\r\n\t\t\treturn {\r\n\t\t\tisDragging: !!monitor.isDragging()\r\n\t\t}\r\n\t}\r\n\t});\r\n\tconst position = positions['chartData'+index];\r\n\tlet top = position && position[0];\r\n\tlet left = position && position[1];\r\n\tif(!top && !left) {\r\n\t\tif(index === 0){\r\n\t\t\ttop = initialPosition[0];\r\n\t\t\tleft = initialPosition[1];\r\n\t\t} else {\r\n\t\t\tconst initial = getNextInitialPos('chartData');\r\n\t\t\ttop = initial[0];\r\n\t\t\tleft = initial[1];\r\n\t\t}\r\n\t}\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetWidgetPositions((widget) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...widget,\r\n\t\t\t\t\t['chartData'+index]: [ top, left, chartDataRef.current.clientHeight, chartDataRef.current.clientWidth ]\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t},\r\n\t\t[ chartDataRef ]\r\n\t);\r\n\tconst styles = useStyles();\r\n\treturn (\r\n\t\t<div ref={chartDataRef} style={chartDataStyle(top, left)}>\r\n\t\t\t<List\r\n\t\t\t\tclasses={{ root: styles.root }}\r\n\t\t\t\tcomponent=\"nav\"\r\n\t\t\t\tsubheader={\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Chip\r\n\t\t\t\t\tclasses={{root: styles.chip}}\r\n\t\t\t\t\tlabel={'widget-'+index}\r\n\t\t\t\t\tsize='small'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Select value={widgetSourceId} onChange={(event) => changeDataSource(index, event.target.value)}>\r\n\t\t\t\t\t{dataSets.map((dataSet, i) => \r\n\t\t\t\t\t\t<MenuItem key={'sourceMenu'+i} value={i}>\r\n\t\t\t\t\t\t\t{dataSet.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t\t<IconButton classes={{root: styles.addNewDataChart}} onClick={addWidgetDataSource}><AddCircleIcon /></IconButton>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\tref={drag}\r\n\t\t\t>\r\n\t\t\t\t<ChartList dataSet={dataSet} selectedindex={dataId} onClickItem={(value) => changeDataId(index, value)} />\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ChartList({ dataSet, selectedindex, onClickItem }) {\r\n\treturn dataSet.map((item, i) => (\r\n\t\t<ListItem button key={item.name} selected={selectedindex === i} onClick={() => onClickItem(i)}>\r\n\t\t\t<ListItemText primary={item.name} />\r\n\t\t</ListItem>\r\n\t));\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { createChart } from 'lightweight-charts';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\taddNewDataChart: {\r\n\t\tfloat: 'right'\r\n\t}\r\n}));\r\n\r\nexport default function ChartGraph(props) {\r\n\tconst styles = useStyles();\r\n\tconst chartGraphRef = useRef();\r\n\tconst {\r\n\t\tindex,\r\n\t\tdataSets,\r\n\t\tdataIds,\r\n\t\tgraphSourceId,\r\n\t\tpositions,\r\n\t\tsetWidgetPositions,\r\n\t\tinitialPosition,\r\n\t\tgetNextInitialPos,\r\n\t\taddGraphWidget,\r\n\t\twidgetDataSources,\r\n\t\tchangeGraphSource\r\n\t} = props;\r\n\tconst widgetSource = widgetDataSources[graphSourceId];\r\n\tconst dataId = dataIds[graphSourceId];\r\n\tconst dataSet = dataSets[widgetSource].stockData[dataId];\r\n\r\n\tconst [ isDragging, drag ] = useDrag({\r\n\t\titem: {\r\n\t\t\ttype: 'chartGraph',\r\n\t\t\tindex\r\n\t\t},\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: !!monitor.isDragging()\r\n\t\t})\r\n\t});\r\n\tconst position = positions['chartGraph' + index];\r\n\tlet top = position && position[0];\r\n\tlet left = position && position[1];\r\n\tif (!top && !left) {\r\n\t\tif (index === 0) {\r\n\t\t\ttop = initialPosition[0];\r\n\t\t\tleft = initialPosition[1];\r\n\t\t} else {\r\n\t\t\tconst initial = getNextInitialPos('chartGraph');\r\n\t\t\ttop = initial[0];\r\n\t\t\tleft = initial[1];\r\n\t\t}\r\n\t}\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetWidgetPositions((widget) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...widget,\r\n\t\t\t\t\t['chartGraph' + index]: [\r\n\t\t\t\t\t\ttop,\r\n\t\t\t\t\t\tleft,\r\n\t\t\t\t\t\tchartGraphRef.current.clientHeight,\r\n\t\t\t\t\t\tchartGraphRef.current.clientWidth\r\n\t\t\t\t\t]\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t},\r\n\t\t[ chartGraphRef ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst chartGraph = document.getElementsByClassName('chartGraph' + index)[0];\r\n\t\t\tconst chartDiv = document.createElement('div');\r\n\t\t\tconst chartElement = chartGraph.appendChild(chartDiv);\r\n\t\t\tconst chart = createChart(chartElement, { width: 600, height: 300 });\r\n\t\t\tconst areaSeries = chart.addAreaSeries({\r\n\t\t\t\ttopColor: 'rgba(21, 146, 230, 0.4)',\r\n\t\t\t\tbottomColor: 'rgba(21, 146, 230, 0)',\r\n\t\t\t\tlineColor: 'rgba(21, 146, 230, 1)',\r\n\t\t\t\tlineStyle: 1,\r\n\t\t\t\tlineWidth: 2,\r\n\t\t\t\tcrosshairMarkerVisible: true,\r\n\t\t\t\tcrosshairMarkerRadius: 3\r\n\t\t\t});\r\n\t\t\t//customize the chart\r\n\t\t\tchart.applyOptions({\r\n\t\t\t\tlocalization: {\r\n\t\t\t\t\tdateFormat: 'dd/MM/yy'\r\n\t\t\t\t},\r\n\t\t\t\tpriceScale: {\r\n\t\t\t\t\tposition: 'left'\r\n\t\t\t\t},\r\n\t\t\t\ttimeScale: {\r\n\t\t\t\t\tfixLeftEdge: true,\r\n\t\t\t\t\tlockVisibleTimeRangeOnResize: true\r\n\t\t\t\t},\r\n\t\t\t\twatermark: {\r\n\t\t\t\t\ttext: 'trading'\r\n\t\t\t\t},\r\n\t\t\t\tlayout: {\r\n\t\t\t\t\tbackgroundColor: 'white'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tareaSeries.setData(dataSet.data.map((item) => ({ ...item, time: item.date })));\r\n\t\t\treturn () => {\r\n\t\t\t\tchartGraph.removeChild(chartElement);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ dataSet ]\r\n\t);\r\n\tfunction widgetSourceLabel(sourceId, sourceIndex) {\r\n\t\tconst dataSet = dataSets[sourceId];\r\n\t\tconst dataId = dataIds[sourceIndex];\r\n\t\tconst stockData = dataSet.stockData[dataId];\r\n\t\treturn `${dataSet.name} -- ${stockData.name}`;\r\n\t}\r\n\tconst getChartStyle = (top, left) => ({\r\n\t\ttop,\r\n\t\tleft,\r\n\t\tcursor: 'move',\r\n\t\theight: '400px',\r\n\t\twidth: '32%',\r\n\t\tposition: 'absolute',\r\n\t\tborder: '1px solid lightgrey'\r\n\t});\r\n\treturn (\r\n\t\t<div ref={chartGraphRef} style={getChartStyle(top, left)}>\r\n\t\t\t<div className={'chartGraph' + index} ref={drag}>\r\n\t\t\t\t<Select value={graphSourceId} onChange={(event) => changeGraphSource(index, event.target.value)}>\r\n\t\t\t\t\t{widgetDataSources.map((sourceId, i) => (\r\n\t\t\t\t\t\t<MenuItem key={'widgetSourceMenu' + i} value={i}>\r\n\t\t\t\t\t\t\t<Chip label={`Widget-${i} `} size=\"small\" /> {widgetSourceLabel(sourceId, i)}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t\t<IconButton classes={{ root: styles.addNewDataChart }} onClick={addGraphWidget}>\r\n\t\t\t\t\t<AddCircleIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n    maxWidth: 360,\r\n    position: 'absolute',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\theight: '400px',\r\n\t\toverflow: 'scroll',\r\n\t\ttop: (props) => props.top || '',\r\n\t\tleft: (props) => props.left || ''\r\n\t},\r\n\tinline: {\r\n\t\tdisplay: 'inline'\r\n  },\r\n  subHeader: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tcursor: 'move'\r\n  }\r\n}));\r\n\r\nexport default function Notifications(props) {\r\n  const notifRef = useRef();\r\n\tconst { items, closeItem, positions, setWidgetPositions, initialPosition } = props;\r\n\tconst [ isDragging, drag ] = useDrag({\r\n\t\titem: {\r\n\t\t\ttype: 'notifications'\r\n\t\t},\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: !!monitor.isDragging()\r\n\t\t})\r\n  });\r\n  const position = positions.notifications;\r\n\tlet top = position[0];\r\n\tlet left = position[1];\r\n\tif(!top && !left){\r\n\t\ttop = initialPosition[0];\r\n\t\tleft = initialPosition[1];\r\n\t}\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetWidgetPositions((widget) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...widget,\r\n\t\t\t\t\tnotifications:[initialPosition[0], initialPosition[1], notifRef.current.clientHeight, notifRef.current.clientWidth]\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t},\r\n\t\t[ notifRef ]\r\n\t);\r\n\tconst styles = useStyles({ top, left });\r\n\treturn (\r\n    <div style={{height: '400px', 'width': '20%'}} ref={notifRef}>\r\n      <List\r\n        classes={{ root: styles.root }}\r\n        ref={drag}\r\n        subheader={\r\n          <ListSubheader component=\"div\" classes={{ root: styles.subHeader }}>\r\n            Notifications\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        <NotifItem items={items} closeItem={closeItem} />\r\n      </List>\r\n    </div>\r\n\t);\r\n}\r\n\r\nfunction NotifItem(props) {\r\n\tconst { items, closeItem } = props;\r\n\tfunction dismissItem(i) {\r\n\t\treturn () => closeItem(i);\r\n\t}\r\n\treturn items.length\r\n\t\t? items.map((item, i) => (\r\n\t\t\t\t<ListItem key={i}>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<Avatar alt=\"Admin\" src=\"./logo.svg\" />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText primary=\"Ali Connors\" secondary={<React.Fragment>{item.text}</React.Fragment>} />\r\n\t\t\t\t\t<IconButton onClick={dismissItem(i)}>\r\n\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</ListItem>\r\n\t\t\t))\r\n\t\t: 'No notifications';\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport ChartData from './ChartData';\r\nimport ChartGraph from './ChartGraph';\r\nimport Notifications from './Notifications';\r\nimport stockSet from './static/data';\r\nimport './App.css';\r\n\r\nconst dataSets = stockSet.map(dataJson => arrangeData(dataJson));\r\n\r\nfunction App() {\r\n\tconst [ widgetDataSources, setWidgetDataSources ] = useState([ 0 ]);\r\n\tconst [ dataIds, setDataIds ] = useState(widgetDataSources.map(() => 0));\r\n\tconst [ graphWidgets, setGraphWidgets ] = useState([ 0 ]);\r\n\tfunction addWidgetDataSource() {\r\n\t\tconst newSources = Object.assign([], widgetDataSources);\r\n\t\tconst newDataIds = Object.assign([], dataIds);\r\n\t\tnewDataIds.push(0);\r\n\t\tnewSources.push(0);\r\n\t\tsetWidgetDataSources(newSources);\r\n\t\tsetDataIds(newDataIds);\r\n\t}\r\n\r\n\tfunction addGraphWidget() {\r\n\t\tconst newGraphWidgets = Object.assign([], graphWidgets);\r\n\t\tnewGraphWidgets.push(0);\r\n\t\tsetGraphWidgets(newGraphWidgets);\r\n\t}\r\n\r\n\tconst [ notifications, setNotifications ] = useState([\r\n\t\t{ text: 'Apple stocks has just increased' },\r\n\t\t{ text: 'ICICI stocks collapsed' },\r\n\t\t{ text: 'ICICI stocks collapsed' },\r\n\t\t{ text: 'ICICI stocks collapsed' },\r\n\t\t{ text: 'ICICI stocks collapsed' },\r\n\t\t{ text: 'ICICI stocks collapsed' },\r\n\t\t{ text: 'ICICI stocks collapsed' }\r\n\t]);\r\n\tconst [ , drop ] = useDrop({\r\n\t\taccept: [ 'chartData', 'chartGraph', 'notifications' ],\r\n\t\tdrop: (item, monitor) => {\r\n\t\t\tconst elementType = item.index !== undefined ? item.type + item.index : item.type;\r\n\t\t\tconst difference = monitor.getDifferenceFromInitialOffset();\r\n\t\t\tconst newWidgetPos = calculateNewPosition(difference, widgetPositions, elementType);\r\n\t\t\tif (newWidgetPos) {\r\n\t\t\t\tsetWidgetPositions(newWidgetPos);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tconst [ widgetPositions, setWidgetPositions ] = useState({\r\n\t\tchartData0: [],\r\n\t\tchartGraph0: [],\r\n\t\tnotifications: []\r\n\t});\r\n\r\n\tfunction calculateNewPosition(difference, widgetPositions, elementType) {\r\n\t\tconst widgetPos = Object.assign({}, widgetPositions);\r\n\t\tconst currentWidget = widgetPos[elementType];\r\n\t\tif (currentWidget[0] + difference.y < 0) {\r\n\t\t\tcurrentWidget[0] = 0;\r\n\t\t} else {\r\n\t\t\tcurrentWidget[0] += difference.y;\r\n\t\t}\r\n\t\tif (currentWidget[1] + difference.x < 0) {\r\n\t\t\tcurrentWidget[1] = 0;\r\n\t\t} else {\r\n\t\t\tcurrentWidget[1] += difference.x;\r\n\t\t}\r\n\t\tconst fixedWidget = fixOverlap(currentWidget, widgetPos, elementType);\r\n\t\treturn { ...widgetPos, [elementType]: fixedWidget };\r\n\t}\r\n\r\n\tfunction fixOverlap(widget, widgetPositions, elementType) {\r\n\t\tfor (var key in widgetPositions) {\r\n\t\t\tif (key !== elementType) {\r\n\t\t\t\tconst currentWidget = widgetPositions[key];\r\n\t\t\t\tconst top = currentWidget[0];\r\n\t\t\t\tconst left = currentWidget[1];\r\n\t\t\t\tconst height = currentWidget[2];\r\n\t\t\t\tconst width = currentWidget[3];\r\n\t\t\t\tconst widgetTop = widget[0];\r\n\t\t\t\tconst widgetLeft = widget[1];\r\n\t\t\t\tconst widgetHeight = widget[2];\r\n\t\t\t\tconst widgetWidth = widget[3];\r\n\t\t\t\tif (\r\n\t\t\t\t\t(widgetTop > top && widgetTop < top + height) ||\r\n\t\t\t\t\t(widgetTop + widgetHeight > top && widgetTop + widgetHeight < top + height)\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(widgetLeft > left && widgetLeft < left + width) ||\r\n\t\t\t\t\t\t(widgetLeft + widgetWidth > left && widgetLeft + widgetWidth < left + width)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// 10px for a small gap between widgets side-by-side\r\n\t\t\t\t\t\twidget[1] = left - widget[3] - 10;\r\n\t\t\t\t\t\treturn widget;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn widget;\r\n\t}\r\n\r\n\tfunction closeNotification(index) {\r\n\t\tconst notifs = Object.assign([], notifications);\r\n\t\tnotifs.splice(index, 1);\r\n\t\tsetNotifications(notifs);\r\n\t}\r\n\tfunction getNextInitialPos(currentWidget) {\r\n\t\tconst keys = Object.keys(widgetPositions);\r\n\t\tconst lastWidget = widgetPositions[keys[keys.length - 1]];\r\n\t\tconst currentWidgetWidth = widgetPositions[currentWidget + '0'][3];\r\n\t\tif (window.innerWidth < lastWidget[1] + lastWidget[3] + currentWidgetWidth) {\r\n\t\t\tconst nextHeight = getMaxElHeight();\r\n\t\t\treturn [ nextHeight + 20, 10 ];\r\n\t\t}\r\n\t\t// 10px for gap between adjacent widgets\r\n\t\treturn [ lastWidget[0], lastWidget[1] + lastWidget[3] + 10 ];\r\n\t}\r\n\tfunction getMaxElHeight() {\r\n\t\tlet maxHeight = 0;\r\n\t\tfor (var key in widgetPositions) {\r\n\t\t\tconst pos = widgetPositions[key];\r\n\t\t\tif (maxHeight < pos[0] + pos[2]) {\r\n\t\t\t\tmaxHeight = pos[0] + pos[2];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxHeight;\r\n\t}\r\n\tfunction changeDataId(dataSourceIndex, value) {\r\n\t\tconst newDataIds = Object.assign([], dataIds);\r\n\t\tnewDataIds[dataSourceIndex] = value;\r\n\t\tsetDataIds(newDataIds);\r\n\t}\r\n\r\n\tfunction changeDataSource(index, value){\r\n\t\tconst newWidgetSources = Object.assign([], widgetDataSources);\r\n\t\tnewWidgetSources[index] = value;\r\n\t\tsetWidgetDataSources(newWidgetSources);\r\n\t}\r\n\r\n\tfunction changeGraphSource(index, value){\r\n\t\tconst newGraphWidgets = Object.assign([], graphWidgets);\r\n\t\tnewGraphWidgets[index] = value;\r\n\t\tsetGraphWidgets(newGraphWidgets);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\" ref={drop}>\r\n\t\t\t{widgetDataSources.map((widgetSourceId, i) => {\r\n\t\t\t\tconst dataSet = dataSets[widgetSourceId].stockData;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChartData\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tdataSet={dataSet}\r\n\t\t\t\t\t\tdataId={dataIds[i]}\r\n\t\t\t\t\t\tchangeDataId={changeDataId}\r\n\t\t\t\t\t\twidgetSourceId={widgetSourceId}\r\n\t\t\t\t\t\tpositions={widgetPositions}\r\n\t\t\t\t\t\tsetWidgetPositions={setWidgetPositions}\r\n\t\t\t\t\t\tinitialPosition={[ 0, 0 ]}\r\n\t\t\t\t\t\tgetNextInitialPos={getNextInitialPos}\r\n\t\t\t\t\t\taddWidgetDataSource={addWidgetDataSource}\r\n\t\t\t\t\t\tdataSets={dataSets}\r\n\t\t\t\t\t\tchangeDataSource={changeDataSource}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{graphWidgets.map((graphSourceId, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ChartGraph\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tgraphSourceId={graphSourceId}\r\n\t\t\t\t\t\tdataIds={dataIds}\r\n\t\t\t\t\t\tpositions={widgetPositions}\r\n\t\t\t\t\t\tsetWidgetPositions={setWidgetPositions}\r\n\t\t\t\t\t\tinitialPosition={[ 0, 350 ]}\r\n\t\t\t\t\t\tgetNextInitialPos={getNextInitialPos}\r\n\t\t\t\t\t\taddGraphWidget={addGraphWidget}\r\n\t\t\t\t\t\twidgetDataSources={widgetDataSources}\r\n\t\t\t\t\t\tchangeGraphSource={changeGraphSource}\r\n\t\t\t\t\t\tdataSets={dataSets}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t<Notifications\r\n\t\t\t\titems={notifications}\r\n\t\t\t\tcloseItem={closeNotification}\r\n\t\t\t\tpositions={widgetPositions}\r\n\t\t\t\tsetWidgetPositions={setWidgetPositions}\r\n\t\t\t\tinitialPosition={[ 0, 1050 ]}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction arrangeData(dataJson) {\r\n\tconst result = { \r\n\t\tname: dataJson.name\r\n\t};\r\n\tconst stockData = [];\r\n\tdataJson.data.forEach((item) => {\r\n\t\tconst date = item['date'];\r\n\t\tfor (var key in item) {\r\n\t\t\tif (key !== 'date') {\r\n\t\t\t\tlet index = stockData.findIndex((item) => item.name === key);\r\n\t\t\t\tif (index === -1) {\r\n\t\t\t\t\tstockData.push({\r\n\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\tdata: []\r\n\t\t\t\t\t});\r\n\t\t\t\t\tindex = stockData.length - 1;\r\n\t\t\t\t}\r\n\t\t\t\tstockData[index].data.push({\r\n\t\t\t\t\tvalue: item[key],\r\n\t\t\t\t\tdate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tresult.stockData = stockData;\r\n\treturn result;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DndProvider } from 'react-dnd';\r\nimport Backend from 'react-dnd-html5-backend';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<DndProvider backend={Backend}>\r\n<App />\r\n</DndProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}